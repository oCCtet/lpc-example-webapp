<?xml version="1.0" ?>
<engine v='1'>
  <!--
  xmlns="http://www.teleste.com"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.teleste.com index.xsd"
  -->

  <!--
  This file defines how the application's user interface is to be incorporated into
  the Luminato's management console (WebUI); a number of pre-defined locations are
  available. If a location is not used, it can be omitted entirely from this file.
    Application-specific meta models shall be defined in file index.json, and any
  JavaScript required by the models in file <ctor>.jsonp (<ctor> being defined in
  the index.json file).
  -->

  <!--
  Module monitoring opens by clicking the module face plate on the Monitor page;
  it supports tabbed view, illustrated below: the first tab shows basic OS stats,
  while the second tab shows CPU stats.
  -->
  <module_monitoring>
    <edit icon='Monitor' heading=' Application module monitoring'>
      <tab heading='OS information'>
        <list widths='100%'>
          <row><col>
            <os_info model-meta='OsInfo' model-multiple='true' refreshable='false' widths='140px,140px,100%,140px'>
              <header-row>
                <col><text attr="hostname" /></col>
                <col><text attr="type" /></col>
                <col><text attr="release" /></col>
                <col><text attr="arch" /></col>
              </header-row>
              <model-row>
                <col><field readonly="true" attr="hostname" /></col>
                <col><field readonly="true" attr="type" /></col>
                <col><field readonly="true" attr="release" /></col>
                <col><field readonly="true" attr="arch" /></col>
              </model-row>
            </os_info>
          </col></row>
          <row><col>
            <os_stats model-meta='OsStats' model-multiple='true' refreshable='true' widths='140px,140px,200px,100%'>
              <header-row>
                <col><text attr="totalmem" /></col>
                <col><text attr="freemem" /></col>
                <col><text attr="loadavg" /></col>
                <col><text attr="temperatures" /></col>
              </header-row>
              <model-row>
                <col><field readonly="true" attr="totalmem" /></col>
                <col><field readonly="true" attr="freemem" /></col>
                <col><field readonly="true" attr="loadavg" /></col>
                <col><field readonly="true" attr="temperatures" /></col>
              </model-row>
            </os_stats>
          </col></row>
        </list>
      </tab>
      <tab heading='CPU information'>
        <list widths='100%'>
          <row><col>
            <cpu_info model-meta='CpuInfo' model-multiple='true' refreshable='true' widths='100%,140px'>
              <header-row>
                <col><text attr="model" /></col>
                <col><text attr="speed" /></col>
              </header-row>
              <model-row>
                <col><field readonly="true" attr="model" /></col>
                <col><field readonly="true" attr="speed" /></col>
              </model-row>
            </cpu_info>
          </col></row>
        </list>
      </tab>
    </edit>
  </module_monitoring>

  <!--
  Module configuration opens by clicking the configuration icon of the Application
  module on the Service page. Four locations are available: before_module_configuration,
  module_configuration, after_module_configuration and advanced_module_configuration;
  the advanced section is within an expander, which is initially closed.
    The example below adds input stream configurations into the module_configuration
  location, allowing the user to manage a list of multicast groups to be received.
  -->
  <module_configuration>
    <block><!-- increase block level -->
      <block icon='Network' heading='Input streaming'>
        <input_mcast_streaming model-meta='InputStreaming' model-multiple='true' widths='100px,70%,30%,icon,icon'>
          <col><field attr="name" readonly="true" /></col>
          <col><field attr="url" readonly="true" /></col>
          <col><field attr="vlan" readonly="true" /></col>
          <col>
            <edit-action>
              <edit apply='true' icon='Configure' heading='Edit input'>
                <include url='/example-app/edit-input-streaming.xml' />
              </edit>
            </edit-action>
          </col>
          <col>
            <delete-action text='Delete input'>
              <delete buttons='delete-cancel' icon='Confirm' heading='Delete streaming input?'>
                <confirm>
                  <text>Do you want to delete input "</text><field readonly='true' attr='name' /><text>"?</text>
                </confirm>
              </delete>
            </delete-action>
          </col>
        </input_mcast_streaming>
        <add-action text='Add input'>
          <edit model-meta='InputStreaming' model-create='true' icon='Configure' heading='Add streaming input'>
            <include url='/example-app/edit-input-streaming.xml' />
          </edit>
        </add-action>
      </block>
    </block>
  </module_configuration>

  <!--
  The example below adds a button into the advanced_module_configuration location; clicking
  it opens a browser window which is navigated into the ext_url location. The actual url is
  defined by the getUrl() JavaScript method of the ExternalLink meta model.
  -->
  <advanced_module_configuration model-meta='ExternalLink' model-id='any'>
    <list type='property-table' widths='100%'><row><col><block><!-- fixup alignment and spacing -->
      <navigate-action href-attr='ext_url' text='OPEN CUSTOM UI' external='toolbar=no,scrollbars=no,menubar=no,status=no,directories=no,title=CustomUI,width=800,height=600,x=10,y=10' />
    </block></col></row></list>
  </advanced_module_configuration>

  <!--
  Administration tiles support two locations: before_admin_tiles and after_admin_tiles, the
  latter demonstrated below. The example AdminTile meta model defines two tiles that open the
  open_custom_properties and open_custom_webui popup windows, respectively.
    The open_custom_properties opens a dialog enabling the user to manage a list of custom
  properties - key-value pairs - demonstrating a simple mechanism of providing configuration
  options for the application(s) running on the module.
    The open_custom_webui opens a dialog providing access to the same ExternalLink model used
  in the advanced_module_configuration, demonstrating more ways for accessing a stand-alone web
  user interface from within the Luminato management console.
  -->
  <after_admin_tiles model-meta='AdminTile' model-multiple='true'>
    <edit-action id='admin_tile' location-attr='location' options="{'tab-id': 'to_be_opened'}">
      <heading attr="name" />
      <text attr="description" />
      <icon attr="icon" />
    </edit-action>
  </after_admin_tiles>

  <popup-container>
    <open_custom_properties icon='Document2' heading=' Custom properties'>
      <custom_properties_list model-meta='CustomProperty' model-multiple='true' widths='50%,50%,icon,icon'>
        <search-row i18n='true'></search-row>
        <model-row>
          <col><field attr="property_name" readonly="true" /></col>
          <col><field attr="property_value" readonly="true" /></col>
          <col>
            <edit-action>
              <edit apply='true' icon='Configure' heading='Edit property'>
                <include url='/example-app/edit-custom-property.xml' />
              </edit>
            </edit-action>
          </col>
          <col>
            <delete-action>
              <delete buttons='delete-cancel' icon='Confirm' heading='Delete property?'>
                <confirm>
                  <text>Do you want to delete property "</text><field readonly='true' attr='property_name' /><text>"?</text>
                </confirm>
              </delete>
            </delete-action>
          </col>
        </model-row>
      </custom_properties_list>
      <add-action text='Add property'>
        <edit model-meta='CustomProperty' model-create='true' icon='Configure' heading='Add property'>
          <include url='/example-app/edit-custom-property.xml' />
        </edit>
      </add-action>
    </open_custom_properties>
    <open_custom_webui icon='Configure' heading=' Custom UI' model-meta='ExternalLink' model-id='0'>
      <block>
        <navigate-action href-attr='ext_url' text='Custom UI (current window)' />
      </block>
      <block>
        <navigate-action href-attr='ext_url' text='Custom UI (new vindow)' external='toolbar=no,scrollbars=no,menubar=no,status=no,directories=no,title=CustomUI,width=800,height=600,x=10,y=10' />
      </block>
      <container href-attr='ext_url' />
    </open_custom_webui>
  </popup-container>
</engine>
